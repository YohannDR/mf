#ifndef PROJECTILE_H
#define PROJECTILE_H

#include "types.h"

u8 ProjectileCount(u8 type, u8 limit);
u8 ProjectileInit(u8 type, u16 yPosition, u16 xPosition, u8 part);
void ProjectileInitSecondary(u8 type, u16 yPosition, u16 xPosition, u8 part, u8 status, u8 direction, u8 ramSlot);
void ProjectileUpdate(void);
void ProjectileUpdateAnimation(void);
void ProjectileDrawAll_False(void);
void ProjectileDrawAll_True(void);
void ProjectileDraw(s32 projectileSlot);
void ProjectileCheckOnScreen(void);
void ProjectileLoadEyeCoreXGraphics(void);
void ProjectileLoadBeamGraphics(void);
void ProjectileLoadMissileGraphics(void);
void ProjectileCallLoadGraphicsAndClearProjectiles(void);
void ProjectileMove(u8 movement);
u32 ProjectileCheckHittingSolid(void);
u32 ProjectileCheckVerticalCollisionAtPosition(void);
void ProjectileMovePart(void);
void ProjectileMoveWaveBeamParts(void);
void ProjectileMoveWaveBeamParts_Unused(void);
void ProjectileSetMissileTrail(u8 particle, u8 delay);
void ProjectileSetBeamTrail(u8 particle, u8 delay);
void ProjectileCheckHittingSprite(void);
u16 ProjectileCheckSpriteCreateDebris(u8 spriteSlot);
u16 ProjectileGetSpriteWeakness(u8 spriteSlot);
void ProjectileRandomSpriteDebris(u8 cloudType, u8 flashTimer, u16 yPosition, u16 xPosition);
void ProjectileRandomSpriteDebrisPiercing(u8 cloudType, u8 flashTimer, u16 yPosition, u16 xPosition);
void ProjectileSetIsftForPowerBomb(u8 spriteSlot);
void ProjectileBringSpriteToPowerBombCenter(u8 spriteSlot);
void ProjectilePowerBombHitSprite(u8 spriteSlot);
void ProjectileContactDamageHitSprite(u8 spriteSlot, u16 yPosition, u16 xPosition);
u8 ProjecileDealDamage(u8 spriteSlot, u16 damage);
void ProjectileSudoScrewHitSprite(u8 spriteSlot, u16 yPosition, u16 xPosition);
u8 ProjectileIceMissileDealDamage(u8 spriteSlot, u8 projectileSlot, u16 damage);
u8 ProjectileDiffusionFlakeDealDamage(u8 spriteSlot, u8 projectileSlot);
u8 ProjectileIceBeamDealDamage(u8 spriteSlot, u8 projectileSlot, u16 damage);
u32 ProjectileSetIsftForSolid(u8 spriteSlot);
void ProjectileNormalBeamHitSprite(u8 spriteSlot, u8 projectileSlot, u16 yPosition, u16 xPosition);
void ProjectileChargedNormalBeamHitSprite(u8 spriteSlot, u8 projectileSlot, u16 yPosition, u16 xPosition);
void ProjectileChargeBeamHitSprite(u8 spriteSlot, u8 projectileSlot, u16 yPosition, u16 xPosition);
void ProjectileChargedChargeBeamHitSprite(u8 spriteSlot, u8 projectileSlot, u16 yPosition, u16 xPosition);
void ProjectileWideBeamHitSprite(u8 spriteSlot, u8 projectileSlot, u16 yPosition, u16 xPosition);
void ProjectileChargedWideBeamHitSprite(u8 spriteSlot, u8 projectileSlot, u16 yPosition, u16 xPosition);
void ProjectilePlasmaBeamHitSprite(u8 spriteSlot, u8 projectileSlot, u16 yPosition, u16 xPosition);
void ProjectileChargedPlasmaBeamHitSprite(u8 spriteSlot, u8 projectileSlot, u16 yPosition, u16 xPosition);
void ProjectileWaveBeamHitSprite(u8 spriteSlot, u8 projectileSlot, u16 yPosition, u16 xPosition);
void ProjectileChargedWaveBeamHitSprite(u8 spriteSlot, u8 projectileSlot, u16 yPosition, u16 xPosition);
void ProjectileFlareHitSprite(u8 spriteSlot, u16 yPosition, u16 xPosition, u16 spriteY, u16 spriteX);
void ProjectileStartMissileTumble(u8 spriteSlot, u8 projectileSlot);
void ProjectileNormalMissileHitSprite(u8 spriteSlot, u8 projectileSlot, u16 yPosition, u16 xPosition);
void ProjectileSuperMissileHitSprite(u8 spriteSlot, u8 projectileSlot, u16 yPosition, u16 xPosition);
void ProjectileIceMissileHitSprite(u8 spriteSlot, u8 projectileSlot, u16 yPosition, u16 xPosition);
void ProjectileDiffusionMissileHitSprite(u8 spriteSlot, u8 projectileSlot, u16 yPosition, u16 xPosition);
void ProjectileDiffusionFlakeHitSprite(u8 spriteSlot, u8 projectileSlot, u16 yPosition, u16 xPosition);
void ProjectileBombHitSprite(u8 spriteSlot, u16 yPosition, u16 xPosition);
void unk_84cac(u8 spriteSlot, u8 projectileSlot, u16 yPosition, u16 xPosition);
void unk_84cc8(u8 spriteSlot, u8 projectileSlot, u16 yPosition, u16 xPosition);
void unk_84ce4(u8 spriteSlot, u8 projectileSlot, u16 yPosition, u16 xPosition);
void ProjectileDealDamageToZazabi(u16 damage);
void ProjectileChargedNormalBeamInit(void);
void ProjectileChargedNormalBeamSubroutine(void);
void ProjectileNormalBeamInit(void);
void ProjectileNormalBeamSubroutine(void);
void ProjectileMissileInit(u8 type);
void ProjectileMoveTumblingMissile(void);
void ProjectileNormalMissileSubroutine(void);
void ProjectileSuperMissileSubroutine(void);
void ProjectileIceMissileSubroutine(void);
void ProjectileDiffusionMissileSubroutine(void);
void ProjectileDiffusionFlakeSubroutine(void);
void ProjectileCheckSamusBombBounce(void);
void ProjectileBombInit(void);
void ProjectileBombSubroutine(void);
void ProjectilePowerBombInit(void);
void ProjectilePowerBombSubroutine(void);
void ProjectileChargedChargeBeamInit(void);
void ProjectileChargedChargeBeamSubroutine(void);
void ProjectileChargeBeamInit(void);
void ProjectileChargeBeamSubroutine(void);
void ProjectileChargedWideBeamInit(void);
void ProjectileChargedWideBeamSubroutine(void);
void ProjectileWideBeamInit(void);
void ProjectileWideBeamSubroutine(void);
void ProjectileChargedPlasmaBeamInit(void);
void ProjectileChargedPlasmaBeamSubroutine(void);
void ProjectilePlasmaBeamInit(void);
void ProjectilePlasmaBeamSubroutine(void);
void ProjectileChargedWaveBeamInit(void);
void ProjectileChargedWaveBeamSubroutine(void);
void ProjectileWaveBeamInit(void);
void ProjectileWaveBeamSubroutine(void);
void ProjectileFlareLoadGraphics(u8 stage);
void ProjectileFlareInit(void);
void ProjectileFlareSubroutine(void);

#endif /* PROJECTILE_H */
