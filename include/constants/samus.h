#ifndef SAMUS_CONSTANTS_H
#define SAMUS_CONSTANTS_H

enum SamusPose {
    SPOSE_STANDING, // 0
    SPOSE_TURNING_AROUND, // 1
    SPOSE_SHOOTING, // 2
    SPOSE_RUNNING, // 3
    SPOSE_MID_AIR, // 4
    SPOSE_TURNING_AROUND_MID_AIR, // 5
    SPOSE_LANDING, // 6
    SPOSE_CROUCHING, // 7
    SPOSE_TURNING_AROUND_AND_CROUCHING, // 8
    SPOSE_SHOOTING_AND_CROUCHING, // 9
    SPOSE_STARTING_SPIN_JUMP, // 0xa
    SPOSE_SPINNING, // 0xb
    SPOSE_MORPHING, // 0xc
    SPOSE_MORPH_BALL, // 0xd
    SPOSE_ROLLING, // 0xe
    SPOSE_UNMORPHING, // 0xf
    SPOSE_MORPH_BALL_MID_AIR, // 0x10
    SPOSE_GETTING_HURT, // 0x11
    SPOSE_GETTING_HURT_IN_MORPH_BALL, // 0x12
    SPOSE_GETTING_KNOCKED_BACK, // 0x13
    SPOSE_GETTING_KNOCKED_BACK_IN_MORPH_BALL, // 0x14
    SPOSE_STARTING_WALL_JUMP, // 0x15
    SPOSE_WALL_JUMPING, // 0x16
    SPOSE_USING_AN_ELEVATOR, // 0x17
    SPOSE_HANGING_ON_LEDGE, // 0x18
    SPOSE_PULLING_YOURSELF_UP_FROM_HANGING, // 0x19
    SPOSE_PULLING_YOURSELF_FORWARD_FROM_HANGING, // 0x1a
    SPOSE_PULLING_YOURSELF_INTO_MORPH_BALL_TUNNEL, // 0x1b
    SPOSE_PULLING_YOURSELF_DOWN_TO_START_HANGING, // 0x1c
    SPOSE_SPACE_JUMPING, // 0x1d
    SPOSE_SCREW_ATTACKING, // 0x1e
    SPOSE_SKIDDING, // 0x1f
    SPOSE_ON_SAVE_PAD, // 0x20
    SPOSE_ON_RECHARGE_OR_SECURITY_PAD, // 0x21
    SPOSE_TURNING_AROUND_TO_RECHARGE_OR_UNLOCK_DOORS, // 0x22
    SPOSE_DELAY_BEFORE_SHINESPARKING, // 0x23
    SPOSE_SHINESPARKING, // 0x24
    SPOSE_DELAY_AFTER_SHINESPARKING, // 0x25
    SPOSE_HANGING_FROM_VERTICAL_LADDER, // 0x26
    SPOSE_STARTING_TO_HOLD_YOUR_ARM_CANNON_OUT_ON_A_VERTICAL_LADDER, // 0x27
    SPOSE_HOLDING_YOUR_ARM_CANNON_OUT_ON_A_VERTICAL_LADDER, // 0x28
    SPOSE_SHOOTING_ON_VERTICAL_LADDER, // 0x29
    SPOSE_STARTING_TO_PUT_AWAY_YOUR_ARM_CANNON_OUT_ON_A_VERTICAL_LADDER, // 0x2a
    SPOSE_HANGING_ON_HORIZONTAL_LADDER, // 0x2b
    SPOSE_MOVING_ON_HORIZONTAL_LADDER, // 0x2c
    SPOSE_TURNING_AROUND_ON_HORIZONTAL_LADDER, // 0x2d
    SPOSE_DELAY_AFTER_SHOOTING_ON_HORIZONTAL_LADDER, // 0x2e
    SPOSE_SHOOTING_ON_HORIZONTAL_LADDER, // 0x2f
    SPOSE_FROZEN, // 0x30
    SPOSE_FROZEN_AND_FALLING, // 0x31
    SPOSE_FROZEN_IN_MORPH_BALL, // 0x32
    SPOSE_FROZEN_IN_MORPH_BALL_AND_FALLING, // 0x33
    SPOSE_UNLOCKING_SECURITY, // 0x34
    SPOSE_SAVING, // 0x35
    SPOSE_ON_NAVIGATION_PAD, // 0x36
    SPOSE_DOWNLOADING_ABILITY, // 0x37
    SPOSE_BEING_RECHARGED, // 0x38
    SPOSE_FACING_FOREGROUND, // 0x39
    SPOSE_FACING_BACKGROUND, // 0x3a
    SPOSE_UNLOCKING_HABITATIONS_DECK, // 0x3b
    SPOSE_GRABBED_BY_ZAZABI, // 0x3c
    SPOSE_LOADING_SAVE, // 0x3d
    SPOSE_DYING, // 0x3e
    SPOSE_HIT_BY_OMEGA_METROID, // 0x3f
    SPOSE_GRABBED_BY_YAKUZA, // 0x40
    
    SPOSE_END,

    // Sub frame poses
    SPOSE_F7 = 0xF7,
    SPOSE_F8,
    SPOSE_KNOCKBACK_REQUEST,
    SPOSE_HURT_REQUEST,
    SPOSE_FROZEN_REQUEST,
    SPOSE_FC = 0xFC,
    SPOSE_LANDING_REQUEST,
    SPOSE_MID_AIR_REQUEST,
    SPOSE_NONE
};

enum SamusStandingStatus {
    STANDING_GROUND,
    STANDING_ENEMY,
    STANDING_MID_AIR,
    STANDING_NOT_IN_CONTROL
};

enum SecurityLevel {
    SECURITY_LEVEL_0,
    SECURITY_LEVEL_1,
    SECURITY_LEVEL_2,
    SECURITY_LEVEL_3,
    SECURITY_LEVEL_4,

    SECURITY_LEVEL_END,

    SECURITY_LEVEL_NO_HATCHES = UCHAR_MAX
};

enum ArmCannonDirection {
    ACD_NONE,
    ACD_FORWARD,
    ACD_DIAGONAL_UP,
    ACD_DIAGONAL_DOWN,
    ACD_UP,
    ACD_DOWN,

    ACD_END
};

enum DiagonalAim {
    DIAG_AIM_NONE,
    DIAG_AIM_UP,
    DIAG_AIM_DOWN,

    DIAG_AIM_END
};

// --- Flags ---

#define SMF_HIGH_JUMP (1 << 0) // 1
#define SMF_SPEED_BOOSTER (1 << 1) // 2
#define SMF_SPACE_JUMP (1 << 2) // 4
#define SMF_SCREW_ATTACK (1 << 3) // 8
#define SMF_VARIA_SUIT (1 << 4) // 0x10
#define SMF_GRAVITY_SUIT (1 << 5) // 0x20
#define SMF_MORPH_BALL (1 << 6) // 0x40
#define SMF_SA_X_SUIT (1 << 7) // 0x80

#define BF_CHARGE_BEAM (1 << 0) // 1
#define BF_WIDE_BEAM (1 << 1) // 2
#define BF_PLASMA_BEAM (1 << 2) // 4
#define BF_WAVE_BEAM (1 << 3) // 8
#define BF_ICE_BEAM (1 << 4) // 0x10

#define MBF_MISSILES (1 << 0) // 1
#define MBF_SUPER_MISSILES (1 << 1) // 2
#define MBF_ICE_MISSILES (1 << 2) // 4
#define MBF_DIFFUSION_MISSILES (1 << 3) // 8
#define MBF_BOMBS (1 << 4) // 0x10
#define MBF_POWER_BOMBS (1 << 5) // 0x20
#define MBF_ANY_MISSILE (MBF_MISSILES | MBF_SUPER_MISSILES | MBF_ICE_MISSILES | MBF_DIFFUSION_MISSILES)

// --- Forced movement ---

#define FORCED_MOVEMENT_UPWARDS_SHINESPARK 0
#define FORCED_MOVEMENT_SIDEWARDS_SHINESPARK 1
#define FORCED_MOVEMENT_DIAGONAL_SHINESPARK 2

#define FORCED_MOVEMENT_MID_AIR_FALL 0
#define FORCED_MOVEMENT_MID_AIR_JUMP 1
#define FORCED_MOVEMENT_MID_AIR_CARRY 2

#define FORCED_MOVEMENT_BOMB_JUMP 0
#define FORCED_MOVEMENT_BOMB_JUMP_RIGHT 10
#define FORCED_MOVEMENT_BOMB_JUMP_UP 11
#define FORCED_MOVEMENT_BOMB_JUMP_LEFT 12
#define FORCED_MOVEMENT_BOMB_JUMP_ABOVE 0x80

// --- Velocity ---

#define SKIDDING_VELOCITY_LOSS (SUB_PIXEL_TO_VELOCITY(ONE_SUB_PIXEL + ONE_SUB_PIXEL / 4.f))

#define HORIZONTAL_LADDER_X_VELOCITY (SUB_PIXEL_TO_VELOCITY(PIXEL_SIZE))

#define KNOCKBACK_Y_VELOCITY (SUB_PIXEL_TO_VELOCITY(PIXEL_SIZE * 2))
#define KNOCKBACK_X_VELOCITY (SUB_PIXEL_TO_VELOCITY(PIXEL_SIZE + PIXEL_SIZE / 2))

// --- Misc ---

// 1000 frames, 16.6 seconds
#define SAMUS_ITEM_PMT (60 * 16 + 60 / 3 * 2)

#endif /* SAMUS_CONSTANTS_H */
